apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argo-cd
  annotations:
    argocd.argoproj.io/sync-wave: "15"
spec:
  project: system
  source:
    repoURL: https://helm.traefik.io/traefik
    chart: traefik
    targetRevision: "37.*"

    helm:
      releaseName: traefik

      values: |
        globalArguments:
          - "--global.checknewversion"
        providers:
          kubernetesIngress:
            publishedService:
              enabled: true
        logs:
          general:
            level: INFO
          access:
            enabled: true
        rbac:
          enabled: true
        deployment:
          podAnnotations:
            prometheus.io/scrape: "true"
            prometheus.io/path: "/metrics"
            prometheus.io/port: "9000"
        service:
          single: false
          spec:
            externalTrafficPolicy: Local
        tlsStore:
          default:
            defaultCertificate:
              secretName: dekiru-tech-tls
        ports:
          web:
            redirections:
              entryPoint:
                to: websecure
                scheme: https
                permanent: true
          websecure:
            http3:
              enabled: true
              advertisedPort: 443
            tls:
              enabled: true
              domains:
                - main: "*.valerauko.net"
                - sans:
                    - "valerauko.net"
                - main: "*.dekiru.tech"
                - sans:
                    - "dekiru.tech"
                - main: "*.erdos.tech"
                - sans:
                    - "erdos.tech"
                - main: "notredrevie.ws"
        metrics:
          prometheus:
            addServicesLabels: true
        initContainers:
          - name: volume-permissions
            image: busybox:latest
            command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
            volumeMounts:
            - mountPath: /data
              name: data
        envFrom:
          - secretRef:
              name: host-api-token

  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system

  syncPolicy:
    automated:
      selfHeal: true
